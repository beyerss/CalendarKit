//
//  CalendarDesignKit.swift
//  CalendarKit
//
//  Created by Steven Beyers on 5/3/16.
//  Copyright (c) 2016 Beyers Apps, LLC. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class CalendarDesignKit : NSObject {

    //// Cache

    private struct Cache {
        static let dateBackgroundColor: UIColor = UIColor(red: 0.967, green: 0.967, blue: 0.967, alpha: 1.000)
        static let calendarBackgroundColor: UIColor = UIColor(red: 0.460, green: 0.460, blue: 0.460, alpha: 1.000)
        static let calendarTitleBackgroundColor: UIColor = UIColor(red: 0.641, green: 0.942, blue: 0.900, alpha: 1.000)
        static let calendarDateColor: UIColor = CalendarDesignKit.calendarTitleBackgroundColor.colorWithBrightness(0.8)
        static let calendarDisabledDateColor: UIColor = UIColor(red: 0.816, green: 0.816, blue: 0.816, alpha: 1.000)
    }

    //// Colors

    public class var dateBackgroundColor: UIColor { return Cache.dateBackgroundColor }
    public class var calendarBackgroundColor: UIColor { return Cache.calendarBackgroundColor }
    public class var calendarTitleBackgroundColor: UIColor { return Cache.calendarTitleBackgroundColor }
    public class var calendarDateColor: UIColor { return Cache.calendarDateColor }
    public class var calendarDisabledDateColor: UIColor { return Cache.calendarDisabledDateColor }

    //// Drawing Methods

    public class func drawSelectedBackground(frame frame: CGRect = CGRect(x: 0, y: 0, width: 58, height: 58)) {

        //// DateCircle Drawing
        let dateCirclePath = UIBezierPath(ovalInRect: CGRect(x: frame.minX + 8, y: frame.minY + 8, width: frame.width - 16, height: frame.height - 16))
        CalendarDesignKit.calendarDateColor.setFill()
        dateCirclePath.fill()
        CalendarDesignKit.calendarDateColor.setStroke()
        dateCirclePath.lineWidth = 3
        dateCirclePath.stroke()
    }

    public class func drawTodayBackground(frame frame: CGRect = CGRect(x: 0, y: 0, width: 58, height: 58)) {

        //// DateCircle Drawing
        let dateCirclePath = UIBezierPath(ovalInRect: CGRect(x: frame.minX + 8, y: frame.minY + 8, width: frame.width - 16, height: frame.height - 16))
        CalendarDesignKit.calendarDateColor.setStroke()
        dateCirclePath.lineWidth = 3
        dateCirclePath.stroke()
    }

    public class func drawDefaultBackground(frame frame: CGRect = CGRect(x: 0, y: 0, width: 58, height: 58)) {
        //// Color Declarations
        let grayCircleColor = UIColor(red: 0.682, green: 0.658, blue: 0.658, alpha: 1.000)

        //// DateCircle Drawing
        let dateCirclePath = UIBezierPath(ovalInRect: CGRect(x: frame.minX + 8, y: frame.minY + 8, width: frame.width - 16, height: frame.height - 16))
        grayCircleColor.setStroke()
        dateCirclePath.lineWidth = 3
        dateCirclePath.stroke()
    }

}



extension UIColor {
    func colorWithHue(newHue: CGFloat) -> UIColor {
        var saturation: CGFloat = 1.0, brightness: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(nil, saturation: &saturation, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: newHue, saturation: saturation, brightness: brightness, alpha: alpha)
    }
    func colorWithSaturation(newSaturation: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, brightness: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(&hue, saturation: nil, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: hue, saturation: newSaturation, brightness: brightness, alpha: alpha)
    }
    func colorWithBrightness(newBrightness: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, saturation: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(&hue, saturation: &saturation, brightness: nil, alpha: &alpha)
        return UIColor(hue: hue, saturation: saturation, brightness: newBrightness, alpha: alpha)
    }
    func colorWithAlpha(newAlpha: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, saturation: CGFloat = 1.0, brightness: CGFloat = 1.0
        self.getHue(&hue, saturation: &saturation, brightness: &brightness, alpha: nil)
        return UIColor(hue: hue, saturation: saturation, brightness: brightness, alpha: newAlpha)
    }
    func colorWithHighlight(highlight: CGFloat) -> UIColor {
        var red: CGFloat = 1.0, green: CGFloat = 1.0, blue: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-highlight) + highlight, green: green * (1-highlight) + highlight, blue: blue * (1-highlight) + highlight, alpha: alpha * (1-highlight) + highlight)
    }
    func colorWithShadow(shadow: CGFloat) -> UIColor {
        var red: CGFloat = 1.0, green: CGFloat = 1.0, blue: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-shadow), green: green * (1-shadow), blue: blue * (1-shadow), alpha: alpha * (1-shadow) + shadow)
    }
}
